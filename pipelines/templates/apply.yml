parameters:
  - name: terraform_version
    default: 1.3.7
  - name: terraform_path
    default: /usr/local/bin
  - name: sa
  - name: container
  - name: environment
  - name: project

stages:
  - stage: terraform_apply
    displayName: Terraform Apply
    # note the syntax for conditions is different to setting variables
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/deployment-jobs?view=azure-devops
    condition: and(succeeded(), eq(dependencies.terraform_plan.outputs['terraform_plan.plan.result'], 'changed'))
    jobs:
      - deployment: terraform_apply
        displayName: Terraform Apply
        workspace:
          clean: all
        environment: ${{ parameters.azdo_release_env }}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
      
                # disable for now and just track via the version requirements in terraform.tf
                # - task: Bash@3
                #   displayName: install terraform
                #   inputs:
                #     targetType: filePath
                #     filePath: scripts/terraform_install.sh
                #     arguments: >
                #       -v ${{ parameters.terraform_version }}
                #       -d ${{ parameters.terraform_path }}
                # 
                # - task: Bash@3
                #   displayName: prepend terraform path
                #   inputs:
                #     targetType: inline
                #     script: |
                #       echo "##vso[task.prependpath]${{ parameters.terraform_path }}"

                - task: AzureCLI@2
                  displayName: terraform init
                  inputs:
                    azureSubscription: arm
                    scriptType: bash
                    scriptLocation: scriptPath
                    scriptPath: scripts/terraform_init.sh
                    workingDirectory: $(Agent.BuildDirectory)/terraform-plan/terraform
                    addSpnToEnvironment: true
                    arguments: >
                      -backend-config="storage_account_name=${{ parameters.sa }}"
                      -backend-config="container_name=${{ parameters.container }}"
                      -backend-config="key=${{ paramters.project }}-${{ parameters.environment }}.tfstate"
                      -backend-config="use_azuread_auth=true"
                  env:
                    TF_IN_AUTOMATION: true

                - task: AzureCLI@2
                  displayName: terraform apply
                  inputs:
                    azureSubscription: arm
                    scriptType: bash
                    scriptLocation: scriptPath
                    scriptPath: scripts/terraform_apply.sh
                    workingDirectory: $(Agent.BuildDirectory)/terraform-plan/terraform
                    addSpnToEnvironment: true
                  env:
                    TF_IN_AUTOMATION: true
